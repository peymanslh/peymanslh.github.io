<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sql on Peyman Salehi</title><link>https://peyman.blog/tags/sql/</link><description>Recent content in Sql on Peyman Salehi</description><generator>Hugo</generator><language>en-us</language><copyright>Â© 2025 Peyman Salehi.</copyright><lastBuildDate>Fri, 10 Mar 2023 14:18:42 +0200</lastBuildDate><atom:link href="https://peyman.blog/tags/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>date_trunc function in PostgreSQL</title><link>https://peyman.blog/posts/date-trunc-function-in-postgresql/</link><pubDate>Fri, 10 Mar 2023 14:18:42 +0200</pubDate><guid>https://peyman.blog/posts/date-trunc-function-in-postgresql/</guid><description>&lt;p>Recently I needed to write a query in SQL to retrieve a bunch of data from a big table with a specific interval. And I don&amp;rsquo;t know, is there any easier way in SQL to do this but I found &lt;code>date_trunc&lt;/code> function in PostgreSQL that is an excellent solution for my problem.&lt;/p>
&lt;h1 id="the-problem-with-an-example">The problem with an example&lt;/h1>
&lt;p>Consider the following table.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>id&lt;/th>
 &lt;th>datetime&lt;/th>
 &lt;th>flight&lt;/th>
 &lt;th>price&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>2023-03-07 12:45:12.231069+00&lt;/td>
 &lt;td>AB12&lt;/td>
 &lt;td>300&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>2&lt;/td>
 &lt;td>2023-03-07 12:50:23.341069+00&lt;/td>
 &lt;td>AB12&lt;/td>
 &lt;td>295&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3&lt;/td>
 &lt;td>2023-03-07 13:10:19.241069+00&lt;/td>
 &lt;td>AB12&lt;/td>
 &lt;td>295&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4&lt;/td>
 &lt;td>2023-03-07 13:33:45.321069+00&lt;/td>
 &lt;td>AB12&lt;/td>
 &lt;td>299&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>6&lt;/td>
 &lt;td>2023-03-07 13:51:58.311069+00&lt;/td>
 &lt;td>AB12&lt;/td>
 &lt;td>299&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>7&lt;/td>
 &lt;td>2023-03-07 13:58:47.141069+00&lt;/td>
 &lt;td>AB12&lt;/td>
 &lt;td>298&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>8&lt;/td>
 &lt;td>2023-03-07 14:15:19.151069+00&lt;/td>
 &lt;td>AB12&lt;/td>
 &lt;td>286&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>9&lt;/td>
 &lt;td>2023-03-07 14:39:55.221069+00&lt;/td>
 &lt;td>AB12&lt;/td>
 &lt;td>289&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>10&lt;/td>
 &lt;td>2023-03-07 15:48:29.111069+00&lt;/td>
 &lt;td>AB12&lt;/td>
 &lt;td>289&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>..&lt;/td>
 &lt;td>..&lt;/td>
 &lt;td>..&lt;/td>
 &lt;td>..&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>And, we want to fetch one row per hour(or the last price for each hour) for flight &lt;code>AB12&lt;/code>.
The output should be something like this.&lt;/p></description></item></channel></rss>